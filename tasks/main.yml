---

- name: "hosts | install dbus on Debian."
  apt:
    name: dbus
    state: present
  when: ansible_os_family == 'Debian'

- name: "hosts | configure Redhat."
  yum:
    name: libselinux-python
    state: present
  when: ansible_os_family == 'RedHat'

- name: "hosts | Update sysconfig on Redhat."
  lineinfile:
    dest: /etc/sysconfig/network
    line: "HOSTNAME={{ inventory_hostname }}"
    regexp: "HOSTNAME="
  when: ansible_os_family == 'RedHat'

- name: "hosts | include OS-specific variables."
  include_vars: "{{ ansible_os_family }}.yml"

- name: "hosts | set facts hosts_file."
  set_fact:
    hosts_file: "{{ __hosts_file }}"

- name: "hosts | set internal IP."
  set_fact:
    main_internal_ipv4: "{{ item }}"
  when: host_prefix | ansible.netcommon.network_in_usable( item )
  with_items: "{{ hostvars[inventory_hostname]['ansible_all_ipv4_addresses'] }}"

- name: "hosts | set hostname with hostname command."
  hostname:
    name: "{{ inventory_hostname }}"
  notify:
    - restart hostname
    - restart systemd-logind

- name: "hosts | re-gather facts."
  action: setup
  when: ansible_hostname != inventory_hostname

- name: "hosts | generate new hosts file."
  template:
    src: hosts.j2
    dest: "{{ hosts_file }}"
    owner: root
    group: root
    mode: 0644
    backup: true
  become: true

